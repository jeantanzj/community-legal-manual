#!/bin/sh

#This file should be named 'pre-push' with no file extension, and placed in .git/hooks 
#It will be fired before git push succeeds/fails.
#This script looks at all the modifications to .md files locally that are different from origin/HEAD, and only amends those
export BONSAI_URL=https://4et5fzvqdw:5as4dekv3t@first-cluster-5446942761.ap-southeast-2.bonsaisearch.net
export BONSAI_INDEX='probono'
export BONSAI_TYPE='md'
shopt -s nullglob
	
jsonEscape () {
	#alternative to replacing \n with \\n would be ` awk 1 ORS='\\n' `
	#replace \ or # or * with nothing, replace / with \/, replace " with \"
	local retVal=$(echo "$1" | tr '\n\t' ' ' | \
	sed -e 's/[\\|\#|\*]//g' \
		-e 's/\//\\\//g' \
		-e 's/\"/\\\"/g' )
	echo "$retVal"
	
}

deleteTempIfExists () {
	if [ -f $TEMP ] ; then
    	rm $TEMP
	fi
}

#Check status of files
name_status=$(git diff --name-status origin/master..HEAD | grep '.md$')
UPSERT=()
DELETE=()
NEXT=''
TEMP='UPDATE-ES.tmp'
for ns in $name_status; do
	if [ ${#ns} == 1 ]; then
		NEXT="$ns"
	else
		if [ "$NEXT" == 'D' ]; then
			DELETE+=("$ns")
		else
			UPSERT+=("$ns")
		fi
	fi
done


deleteTempIfExists

for filename in ${UPSERT[@]}; do
 	title="$(echo $filename | awk '{gsub(".md$",""); gsub("-", " "); for(i=1;i<=NF;i++){ $i=toupper(substr($i,1,1)) substr($i,2) }; print;}')"
 	url="$(echo $filename | awk '{c=$0; sub(".md$","",c); printf "/%s.html" , c;}')"
 	escapedTitle=$(jsonEscape "$title")
 	content="$(cat $filename)"
 	escapedContent=$(jsonEscape "$content")
 	printf '{ "update" : {"_id" : "%s", "_type" : "%s", "_index" : "%s"} }\n' "$filename" "$BONSAI_TYPE" "$BONSAI_INDEX" >> "$TEMP"
 	printf '{ "doc" : {"title":"%s", "url":"%s", "content":"%s"}, "doc_as_upsert": true  }\n' "$escapedTitle" "$url" "$escapedContent" >> "$TEMP"
done

for filename in ${DELETE[@]}; do
	printf '{ "delete" : {"_id" : "%s", "_type" : "%s", "_index" : "%s"} }\n' "$filename" "$BONSAI_TYPE" "$BONSAI_INDEX" >> "$TEMP"
done

#if index does not exist, create it
index_status=$( curl -w %{http_code} -s -i -o /dev/null "$BONSAI_URL/$BONSAI_INDEX")
if [ "$index_status" == '404' ]; then
	echo >&2 '\nCreate index\n'
	curl -XPUT "$BONSAI_URL/$BONSAI_INDEX"
fi

mapping_status=$( curl -w %{http_code} -s -i -o /dev/null "$BONSAI_URL/$BONSAI_INDEX/_mapping/$BONSAI_TYPE")
if [ "$mapping_status" == '404' ]; then
	echo >&2 '\nAdd type to index\n'
	curl -XPUT "$BONSAI_URL/$BONSAI_INDEX/_mapping/$BONSAI_TYPE" -H 'Content-Type: application/json' -d '{"properties": {"title": {"type": "string"}, "url": {"type": "string"}, "content": {"type": "string", "term_vector" : "with_positions_offsets"} } } '
fi

echo >&2 '\nUpdate in bulk\n'
curl -s -H "Content-Type: application/json" -XPOST "$BONSAI_URL/_bulk?pretty" --data-binary "@$TEMP"

deleteTempIfExists

exit 0